{"remainingRequest":"/Users/rinat/projects/zilpay/zilpay-docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/rinat/projects/zilpay/zilpay-docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/rinat/projects/zilpay/zilpay-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/rinat/projects/zilpay/zilpay-docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/rinat/projects/zilpay/zilpay-docs/docs/README.md?vue&type=template&id=c6f5370e&","dependencies":[{"path":"/Users/rinat/projects/zilpay/zilpay-docs/docs/README.md","mtime":1617431777266},{"path":"/Users/rinat/projects/zilpay/zilpay-docs/node_modules/cache-loader/dist/cjs.js","mtime":1614854378606},{"path":"/Users/rinat/projects/zilpay/zilpay-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1614854511094},{"path":"/Users/rinat/projects/zilpay/zilpay-docs/node_modules/cache-loader/dist/cjs.js","mtime":1614854378606},{"path":"/Users/rinat/projects/zilpay/zilpay-docs/node_modules/vue-loader/lib/index.js","mtime":1614854511094},{"path":"/Users/rinat/projects/zilpay/zilpay-docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1614854512435}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}